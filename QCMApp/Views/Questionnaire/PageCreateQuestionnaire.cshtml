@model QCMApp.Models.ViewModelQuestionnaireElements

@{
    ViewBag.Title = "CreateQuestionnaire";
}

<h2>Création du questionnaire</h2>



<table class="table">
    <tr>
        <th>
            Type
        </th>
        <th>
            Intitulé de l'élément
        </th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>

        <th>
            Actions
        </th>


        <th>Déplacer</th>
    </tr>
    @{
        var compteur = 0;
    }
    @if (Model.elements != null)
    {
        foreach (var element in Model.elements)
        {
            <tr>
                <td>
                    @if (element.TypeElement_Id == 1)
                    {
                        @*<p>Description</p>*@
                        <p class="typeElement">Description</p>
                    }
                    else
                    {
                        @*<p>Question</p>*@
                        <p class="typeElement">Question</p>

                    }
                </td>
                <td>
                    @element.intitule
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>

                <td>
                    @if (element.TypeElement_Id == 1)
                    {
                        <input type="button" class="btn btn-outline-primary" value="Update" onclick="location.href='@Url.Action("PageUpdateDescription", "Description", new { id = element.Id})'" />
                        <input type="button" class="btn btn-outline-primary" value="Delete" onclick="location.href='@Url.Action("DeleteElement", "Description", new { id = element.Id })'" />
                    }
                    else
                    {
                        <input type="button" class="btn btn-outline-primary" value="Update" onclick="location.href='@Url.Action("PageUpdateQuestion", "Question", new { id = element.Id})'" />
                        <input type="button" class="btn btn-outline-primary" value="Delete" onclick="location.href='@Url.Action("DeleteQuestion", "Question", new { id = element.Id })'" />
                    }



                </td>

                <th>
                    @if (compteur == 0)
                    {
                        @*<input type="button" class="btn btn-light" value="+" onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'" />*@
                        <input class="arrowButton" type="hidden" />
                        <input class="rounded arrowButton border border-primary" type="image"
                               src="~/Content/asserts/icones/fleche_down.png"
                               onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'" />
                        compteur++;
                    }
                    else if (compteur != Model.elements.Count - 1)
                    {
                        @*<input type="button" class="btn btn-light" value="-" onclick="location.href='@Url.Action("ElementUp", "Element", new { idElement = element.Id })'" />
                        <input type="button" class="btn btn-light" value="+" onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'" />*@
                            @*<input type="button" style="background: url(~/Content/asserts/open-iconic/svg/arrow-thick-bottom.svg)" class="btn btn-light" value="+" onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'" />
                            <img src="~/Content/asserts/open-iconic/svg/arrow-thick-bottom.svg"  onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'"  alt="icon name">*@
                        <input class="rounded arrowButton border border-primary" type="image"
                               src="~/Content/asserts/icones/fleche_down.png"
                               onclick="location.href='@Url.Action("ElementDown", "Element", new { idElement = element.Id })'" />
                        <input class="rounded arrowButton border border-primary" type="image"
                               src="~/Content/asserts/icones/fleche_haut.png"
                               onclick="location.href='@Url.Action("ElementUp", "Element", new { idElement = element.Id })'" />

                        compteur++;
                    }
                    else
                    {
                        <input class="rounded arrowButton border border-primary" type="image"
                               src="~/Content/asserts/icones/fleche_haut.png"
                               onclick="location.href='@Url.Action("ElementUp", "Element", new { idElement = element.Id })'" />
                    }

                </th>

            </tr>
        }
    }
</table>

@*@if (Model.elements != null)
    {
        foreach (var element in Model.elements)
        {
            <div class="row">
                <div class="col-mid-3">
                    <h2>@element.intitule</h2>
                </div>
            </div>

        }

    }
    <div class="row">
        <div class="col-mid-3">

        </div>
    </div>*@

<hr class="style1" />
@using (Html.BeginForm("CreateQuestionnaire", "Questionnaire", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-2">
            <br />
            <br />
            @*@Html.ActionLink("Nouvelle question", "", "Question", null, new { @class = "btn btn-default" })*@
            <input type="button" class="btn btn-outline-primary" value="Nouvelle question" onclick="location.href='@Url.Action("PageCreateQuestion", "Question", new { id = Model.questionnaire.Id })'" />
        </div>
        <div class="col-md-2">
            <br />
            <br />
            @*@Html.ActionLink("Nouvelle description", "PageCreateDescription", "Element", new { id = Model.questionnaire.Id }, new { @class = "btn btn-default" })*@
            <input type="button" class="btn btn-outline-primary" value="Nouvelle description" onclick="location.href='@Url.Action("PageCreateDescription", "Description", new { id = Model.questionnaire.Id })'" />
        </div>
        <div class="col-md-2">
            <label for="intitule"> Intitule du questionnaire</label>
            <input type="text" value="@Html.DisplayFor(model => model.questionnaire.intitule)" name="intitule" id="intituleCreateIntitule" size="100" />
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-2">
            <label for="note"> Note acceptable sur 20</label>
            <input type="number" value="16" name="note" min="1" max="20" />
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-1">
            <br />
            <br />
            <input type="submit" value="Enregister" class="btn btn-outline-primary" />
        </div>
        <div class="col-md-1" id="nombreQuestions">
            <br />
            <p> nbr:Qts</p>
            @{
                var compteurQuestion = 0;
            }
            @foreach (var element in Model.elements)
            {
                if (element.TypeElement_Id == 2)
                {
                    compteurQuestion++;
                }

            }
            <p>@compteurQuestion</p>
        </div>
        <input type="hidden" value="@Html.DisplayFor(model => model.questionnaire.Id)" name="id" id="id" />
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function(){
        $("")

    })
</script>
}
